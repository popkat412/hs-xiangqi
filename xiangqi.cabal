cabal-version:       2.4
name:                xiangqi
version:             0.0.0.0
synopsis:            Xiangqi (Chinese Chess) engine implemented in haskell
description:         Xiangqi (Chinese Chess) engine implemented in haskell
license:             GPL-3.0-only
license-file:        LICENSE
author:              wangy412
maintainer:          wangy412 <wangyunze412@gmail.com>
copyright:           2021 wangy412
build-type:          Simple
extra-doc-files:     README.md
                     CHANGELOG.md
tested-with:         GHC == 8.10.7

common common-options
  build-depends:       base >= 4.14.0.0
  
  ghc-options:         -Wall
                       -Wcompat
                       -Widentities
                       -Wincomplete-uni-patterns
                       -Wincomplete-record-updates
  if impl(ghc >= 8.0)
    ghc-options:       -Wredundant-constraints
  if impl(ghc >= 8.2)
    ghc-options:       -fhide-source-paths
  if impl(ghc >= 8.4)
    ghc-options:       -Wmissing-export-lists
                       -Wpartial-fields
  if impl(ghc >= 8.8)
    ghc-options:       -Wmissing-deriving-strategies

  default-language:    Haskell2010

library
  import:              common-options
  hs-source-dirs:      src
  build-depends:       data-dword
                     , mtl
                     , transformers
                     , text
                     , containers
                     , microlens
                     , microlens-th
                     , microlens-mtl
                     , QuickCheck
  exposed-modules:     Xiangqi
                     , Xiangqi.SquareSet
                     , Xiangqi.MoveGeneration
                     , Xiangqi.Board
                     , Xiangqi.Game
                     , Xiangqi.Types
  other-modules:       Xiangqi.Helpers

executable xiangqi
  import:              common-options
  hs-source-dirs:      app
  main-is:             Main.hs
  build-depends:       xiangqi
                     , mtl
                     , transformers
  ghc-options:         -threaded
                       -rtsopts
                       -with-rtsopts=-N

test-suite xiangqi-test
  import:              common-options
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Spec.hs
  build-depends:       xiangqi
                     , mtl
                     , tasty
                     , tasty-quickcheck 
                     , tasty-smallcheck 
                     , tasty-hunit
                     , test-invariant
  ghc-options:         -threaded
                       -rtsopts
                       -with-rtsopts=-N

benchmark xiangqi-benchmark
  import:              common-options
  type:                exitcode-stdio-1.0
  hs-source-dirs:      benchmark
  main-is:             Main.hs
  build-depends:       gauge
                     , xiangqi
  ghc-options:         -threaded
                       -rtsopts
                       -with-rtsopts=-N
